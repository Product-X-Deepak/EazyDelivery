name: CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build Release APK and Bundle
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      
      - name: Create keystore file
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > keystore.jks
          echo "storeFile=keystore.jks" >> keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties
      
      - name: Build Release APK
        run: ./gradlew assembleRelease
      
      - name: Build Release Bundle
        run: ./gradlew bundleRelease
      
      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
      
      - name: Upload Release Bundle
        uses: actions/upload-artifact@v3
        with:
          name: app-release-bundle
          path: app/build/outputs/bundle/release/app-release.aab

  deploy-firebase:
    name: Deploy to Firebase App Distribution
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/
      
      - name: Setup Firebase CLI
        run: npm install -g firebase-tools
      
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: testers
          file: app/build/outputs/apk/release/app-release.apk
          releaseNotes: |
            Changes in this release:
            - ${{ github.event.head_commit.message }}

  deploy-play-store:
    name: Deploy to Play Store
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') # Only deploy to Play Store for version tags
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Release Bundle
        uses: actions/download-artifact@v3
        with:
          name: app-release-bundle
          path: app/build/outputs/bundle/release/
      
      - name: Deploy to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          packageName: com.eazydelivery.app
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: completed
          whatsNewDirectory: whatsnew/
          mappingFile: app/build/outputs/mapping/release/mapping.txt

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [deploy-firebase, deploy-play-store]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Release APK
        uses: actions/download-artifact@v3
        with:
          name: app-release
          path: ./
      
      - name: Download Release Bundle
        uses: actions/download-artifact@v3
        with:
          name: app-release-bundle
          path: ./
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-release.apk
            app-release.aab
          body: |
            ## Release Notes
            ${{ github.event.head_commit.message }}
            
            ## Installation
            Download and install the APK on your device.
            
            ## Feedback
            Please report any issues or feedback in the GitHub Issues section.
